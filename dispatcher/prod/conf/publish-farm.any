  /publishfarm
    {  
    # client headers which should be passed through to the render instances
    # (feature supported since dispatcher build 2.6.3.5222)
    /clientheaders
      {
      "referer"
      "user-agent"
      "authorization"
      "from"
      "content-type"
      "content-length"
      "accept-charset"
      "accept-encoding"
      "accept-language"
      "accept"
      "host"
      "if-match"
      "if-none-match"
      "if-range"
      "if-unmodified-since"
      "max-forwards"
      "proxy-authorization"
      "proxy-connection"
      "range"
      "cookie"
      "cq-action"
      "cq-handle"
      "handle"
      "action"
      "cqstats"
      "depth"
      "translate"
      "expires"
      "date"
      "dav"
      "ms-author-via"
      "if"
      "lock-token"
      "x-expected-entity-length"
      "destination"
      }
    # hostname globbing for farm selection (virtual domain addressing)
    /virtualhosts
      {
		$include "publish-vhosts.any"
      }
    # the load will be balanced among these render instances
    /renders
      {
	  $include "publish-renders.any"
      }
    # only handle the requests in the following acl. default is 'none'
    # the glob pattern is matched against the first request line
    /filter
      {
	# allow everything
	/0001 { /type "allow"  /glob "*" }

	# block admin tools
	/0010 { /type "deny" /glob "* /admin/*" } # block access to servlet engine config
	/0011 { /type "deny" /glob "* /admin *" } # block access to servlet engine config
	/0012 { /type "deny" /glob "* /system/*" } # block access to Felix configuration console
	/0013 { /type "deny" /glob "* /_jcr_system/*" } # block access to version store
	/0014 { /type "deny" /glob "* /jcr:system/*" } # block access to version store
	/0015 { /type "deny" /glob "* /dav/crx.*" } # block access to Sling WebDAV access

	# block crx tools
	/0016 { /type "deny" /glob "* /crx/*" } # block access to crx tools
	/0017 { /type "deny" /glob "* /crx *" } # block access to crx tools
	/0018 { /type "deny" /glob "* /bin/crxde*" } # block access to crx tools

	# deny non-public directories
	/0020 { /type "deny" /glob "* /var/*" }
	/0021 { /type "deny" /glob "* /tmp/*" }
	/0022 { /type "deny" /glob "* /bin/*" }
	/0023 { /type "deny" /glob "* /libs/*" }
	/0024 { /type "deny" /glob "* /apps/*" }
	/0025 { /type "deny" /glob "* /etc/*" }
	/0026 { /type "deny" /glob "* /home/*" }
	# /0027 { /type "deny" /glob "* /content/usergenerated/*" } # this blocks comment/rating/forum/form posts!

	# allow site CSS/JS/decorators
	/0040 { /type "allow" /glob "GET /etc/designs/*" } # the design and template assets
	/0041 { /type "allow" /glob "GET /etc/clientlibs/*" } # collected JS/CSS from the components and design
	/0042 { /type "allow" /glob "GET /etc/mobile/groups/*" } # mobile site

	/0043 { /type "allow" /glob "GET /bin/statistics/tracker/*" } # foundation search component - write stats
	/0044 { /type "allow" /glob "GET /libs/collab/commons/components/comments/clientlibs.*" } # foundation comment component
	/0045 { /type "allow" /glob "GET /libs/cq/personalization/*" } # foundation teaser component
	/0046 { /type "allow" /glob "GET /etc/segmentation.segment.js *" } # foundation teaser component
	/0047 { /type "allow" /glob "GET /system/sling.js *" } # foundation slide show component
	/0048 { /type "allow" /glob "GET /home/users/*/profile/photos/primary/*" } # soco: profile picture in forum
	/0049 { /type "allow" /glob "GET /home/users/*/profile.form.html*" } # soco: profile page show/edit/passwordchange
	# add more here...


	# block default file type access
	/0090 { /type "deny" /glob "GET *.json*" } # block all json requests (careful - mind whitelist valid json requests)
	/0091 { /type "deny" /glob "GET *.xml*" } # block all xml requests (careful - mind whitelist valid xml requests)
	/0092 { /type "deny" /glob "GET *.jsp*" } # block all jsp requests

	# block default feed servlet
	/0093 { /type "deny" /glob "GET *.feed*" } # feed: block all feeds
	/0094 { /type "deny" /glob "GET */feed.*" } # feed: block all feeds

    # open specific JSON request
	/0100 { /type "allow" /glob "GET /libs/cq/security/userinfo.json*" } # teaser component and analytics 
	/0101 { /type "allow" /glob "GET /libs/cq/personalization/components/clickstreamcloud/content/config.json*" } # teaser component and analytics 
	/0102 { /type "allow" /glob "POST /bin/querybuilder.json *"  } # asset share / calendar components
	/0103 { /type "allow" /glob "GET *.timezones.json*" } # calendar components
	/0104 { /type "allow" /glob "GET /libs/cq/i18n/dict.en.json *" } # calendar components
	/0105 { /type "allow" /glob "GET /content/girlscouts-vtk/en/vtk.expiredcheck.json*" } # VTK Ex-pire check
	/0106 { /type "allow" /glob "GET /vtk-data/*.json*" } # VTK cached data
	/0107 { /type "allow" /glob "GET /content/gsusa/sitemap.xml *" } # allow sitmap.xml
	# add more here...

      }

    # allow propagation of replication posts (should seldomly be used)
    /propagateSyndPost "0"

    # the cache is used to store requests from the renders for faster delivery
    # for a second time.
    /cache
      {
      # the cacheroot must be equal to the document root of the webserver
      /docroot "/mnt/var/www/html"

      # sets the level upto which files named ".stat" will be created in the 
      # document root of the webserver. when an activation request for some 
      # handle is received, only files within the same subtree are affected 
      # by the invalidation.
      /statfileslevel "0"
      
      # caches also authorized data
      /allowAuthorized "0"

      # the rules define, which pages should be cached. please note that
      # - only GET requests are cached
      # - only requests with an extension are cached
      # - only requests without query parameters ( ? ) are cached
      # - only unauthorized pages are cached unless allowUnauthorized is set to 1
      /rules
        {
        /0000
          {
          # the globbing pattern to be compared against the url
          # example: *             -> everything
          #        : /foo/bar.*    -> only the /foo/bar documents
          #        : /foo/bar/*    -> all pages below /foo/bar
          #        : /foo/bar[./]* -> all pages below and /foo/bar itself
          #        : *.html        -> all .html files
          /glob "*"
          /type "allow"
          }
        /0001
          {
          /glob "/content/girlscouts-vtk/*"
          /type "deny"
          }
        /0002
          { 
          /glob "/content/dam/girlscouts-vtk/troop-data*" /type "deny"
          }
# inkoo added caching troop photo
        /0003
          {
          /glob "/content/dam/girlscouts-vtk/troop-data*/imgLib/*"
          /type "allow"
          }
# inkoo added caching static myvtk pages
        /0004
          {
          /glob "/content/girlscouts-vtk/en/myvtk/*"
          /type "allow"
          }
        }
      # the invalidate section defines those pages which are 'invalidated' after
      # any activation. please note that, the activated page itself and all 
      # related documents are flushed on an modification. for example: if the 
      # page /foo/bar is activated, all /foo/bar.* files are removed from the
      # cache.
      /invalidate
        {
        /0000
          {
          /glob "*"
          /type "deny"
          }
        /0001
          {
          /glob "*.html"
          /type "allow"
          }
        }
	    /allowedClients
	      {
	      /0000
	        {
	        /glob "*.*.*.*"
	        /type "deny"
	        }
	      /0001
	        {
	        /glob "127.0.0.1"
	        /type "allow"
	        }
		  $include "publish-invalidate-allowed.any"
		  }
      }
    # the statistics define, how the load should be balanced among the renders
    # according to the media-type. 
    /statistics
      {
      /categories
        {
        /html
          {
          /glob "*.html"
          }
        /others
          {
          /glob "*"
          }
        }
      }
    }
 
