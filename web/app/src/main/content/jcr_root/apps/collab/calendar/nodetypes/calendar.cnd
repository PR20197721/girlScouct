/*
 * Copyright (c) 1997-2009 Day Management AG
 * Barfuesserplatz 6, 4001 Basel, Switzerland
 * All Rights Reserved.
 *
 * This software is the confidential and proprietary information of
 * Day Management AG, ("Confidential Information"). You shall not
 * disclose such Confidential Information and shall use it only in
 * accordance with the terms of the license agreement you entered into
 * with Day.
 */
<cq   = 'http://www.day.com/jcr/cq/1.0'>
<sling = 'http://sling.apache.org/jcr/sling/1.0'>

// TODO: attendee nodetype (finalise & release)
// TODO: alarm nodetype (finalise & release)
// TODO: make alarm standalone (own start time, no related stuff to parent icalendar event)
// TODO: attachments for alarm
// TODO: todo nodetype (finalise & release)
// TODO: maybe use undefined for mixed-value types (eg. TRIGGER date-time vs. duration type)

/**
 * Calendar mixin as marker for calendar subtrees
 */
[cq:Calendar] > mix:title, sling:Resource
  mixin

/**
 * Base Component nodetype (following the iCalendar model). Events and Todos inherit
 * from this one, which contains all common properties and child node definitions.
 *
 * @prop uid             unique identifier of the component
 *                       UID http://tools.ietf.org/html/rfc2445#section-4.8.4.7
 *
 * @prop recurrenceOf    path to the original event node of this recurrence event
 *                       if this property is missing, it is not a recurrence
 *
 * @prop localLastImportMD5   for imported events only: an md5 hash of the event serialized
 *                            as icalendar string representing the state after the last
 *                            import; used for detecting local changes between imports
 *                            Note: this should only be written by importers!
 *
 * @prop remoteLastImportMD5  for imported events only: an md5 hash of the last imported
 *                            icalendar ics event object (VEVENT as string); used for
 *                            detecting remote changes between imports
 *                            Note: this should only be written by importers!
 *
 * @prop start           start date/time of the event or todo)
 *                       DTSTART http://tools.ietf.org/html/rfc2445#section-4.8.2.4
 *
 * @prop isDate          whether the dates of this event (ie. 'start') denote a pure date w/o time
 *                       (since JCR always stores a full ISO8601 string as the date property
 *                       representation, incl. the time, the distinction between a pure date
 *                       and 0:00h at that date cannot be made with JCR's date property)
 *                       if this property is not set, date + time is assumed
 *                       DTSTART http://tools.ietf.org/html/rfc2445#section-4.8.2.4
 *
 * @prop timeZone        time zone (name) for this event (for all dates)
 *                       TZID http://tools.ietf.org/html/rfc2445#section-4.2.19
 *                       DTSTART http://tools.ietf.org/html/rfc2445#section-4.8.2.4
 *
 * @prop location        location of the event (free format)
 *                       LOCATION http://tools.ietf.org/html/rfc2445#section-4.8.1.7
 *
 * @prop contact         contact info associated with the event
 *                       CONTACT http://tools.ietf.org/html/rfc2445#section-4.8.4.2
 *
 * @prop attachments     links/URLs to attached documents
 *                       (see "attachments" subnode for inline-attachments)
 *                       ATTACH http://tools.ietf.org/html/rfc2445#section-4.8.1.1
 *
 * @prop url             web URL linking to more information for the event
 *                       URL http://tools.ietf.org/html/rfc2445#section-4.8.4.6
 *
 * @prop status          defines the overall status or confirmation
 *                       STATUS http://tools.ietf.org/html/rfc2445#section-4.8.1.11
 *
 * @prop priority        defines the relative priority for a calendar component
 *                       PRIORITY http://tools.ietf.org/html/rfc2445#section-4.8.1.9
 *
 * @prop stamp           date/time when this component was initially created (always UTC)
 *                       DTSTAMP http://tools.ietf.org/html/rfc2445#section-4.8.7.2
 *
 * @prop class           access classification
 *                       CLASS http://tools.ietf.org/html/rfc2445#section-4.8.1.3
 *
 * @prop sequence        revision number, incremented on "significant" changes
 *                       SEQUENCE http://tools.ietf.org/html/rfc2445#section-4.8.7.4
 *
 * @prop resources       list of resources required for the event
 *                       RESOURCES http://tools.ietf.org/html/rfc2445#section-4.8.1.10
 *
 * Inherited props:
 *
 * @prop jcr:title       short summary of the event
 *                       SUMMARY http://tools.ietf.org/html/rfc2445#section-4.8.1.12
 *
 * @prop jcr:description longer description of the event
 *                       DESCRIPTION http://tools.ietf.org/html/rfc2445#section-4.8.1.5
 *
 * @prop jcr:created     date/time when this node was created in the repository (always UTC)
 *                       CREATED http://tools.ietf.org/html/rfc2445#section-4.8.7.1
 *
 * @prop jcr:createdBy   user who created this
 *                       (no ical representation)
 *
 * @prop jcr:lastModified  date/time when this node was last modified in the repository (always UTC)
 *                         LAST-MODIFIED http://tools.ietf.org/html/rfc2445#section-4.8.7.3
 *
 * @prop jcr:lastModifiedBy  user who did the last modification
 *                           (no ical representation)
 *
 * @prop cq:tags         tags / keywords / categories
 *                       CATEGORIES http://tools.ietf.org/html/rfc2445#section-4.8.1.2
 *
 * @prop latitude        latitude encoded as double using decimal degrees
 *                       GEO  http://tools.ietf.org/html/rfc2445#section-4.8.1.6
 *
 * @prop longitude       longitude encoded as double using decimal degrees
 *                       GEO  http://tools.ietf.org/html/rfc2445#section-4.8.1.6
 *
 * Subnodes:
 *
 * @node comments        containing comment nodes (cq:Comment)
 *                       COMMENT http://tools.ietf.org/html/rfc2445#section-4.8.1.4
 *
 * @node recurrence      containing recurrence rules, dates and exception dates (cq:CalendarRecurrence)
 *                       RRULE http://tools.ietf.org/html/rfc2445#section-4.8.5.4
 *                       RDATE http://tools.ietf.org/html/rfc2445#section-4.8.5.3
 *                       EXDATE http://tools.ietf.org/html/rfc2445#section-4.8.5.1
 *                       not supported: EXRULE http://tools.ietf.org/html/rfc2445#section-4.8.5.2
 *
 * @node organizer       organizer of the event
 *                       ORGANIZER http://tools.ietf.org/html/rfc2445#section-4.8.4.3
 *
 * @node attendees       containing list of attendees (user, name, status, delegatee) (cq:CalendarAttendee)
 *                       ATTENDEE http://tools.ietf.org/html/rfc2445#section-4.8.4.1
 *
 * @node attachments     containing inline attachments (nt:file)
 *                       ATTACH http://tools.ietf.org/html/rfc2445#section-4.8.1.1
 *
 * @node alarms          containing event-related alarm nodes (cq:Alarm)
 *                       VALARM component http://tools.ietf.org/html/rfc2445#section-4.6.6
 *
 */
[cq:CalendarComponent] > mix:title, mix:created, mix:lastModified, cq:OwnerTaggable, cq:GeoLocation, nt:unstructured
  - uid (string)
  - recurrenceOf (path)
  - localLastImportMD5 (string)
  - remoteLastImportMD5 (string)
  - start (date)
  - isDate (boolean)
  - timeZone (string)
  - location (string)
  - contact (string)
  - attachments (string) multiple
  - url (string)
  - status (string)
  - priority (long)
  - stamp (date)
  - class (string)
  - sequence (long)
  - resources (string) multiple
  + recurrence (nt:base) = cq:CalendarRecurrence copy
  + organizer (nt:base) = nt:unstructured copy
  + attendees (nt:base) = nt:unstructured copy
  + comments (nt:base) = nt:unstructured copy
  + attachments (nt:folder) = nt:folder copy
  + alarms (nt:base) = nt:unstructured copy
  
/**
 * iCalendar-based Event nodetype
 *
 * VEVENT http://tools.ietf.org/html/rfc2445#section-4.6.1
 *
 * @prop end             end date/time of the event (can also map to DURATION)
 *                       DTEND http://tools.ietf.org/html/rfc2445#section-4.8.2.2
 *                       DURATION http://tools.ietf.org/html/rfc2445#section-4.8.2.5
 *
 * @prop transparent     defines whether an event is transparent or not to busy time searches
 *                       TRANSP http://tools.ietf.org/html/rfc2445#section-4.8.2.7
 */
[cq:CalendarEvent] > cq:CalendarComponent
  - end (date)
  - transparent (boolean)


/**
 * Holds recurrence information (for events)
 *
 * @prop dates           fixed list of dates/date+times when the event recurs
 *                       RDATE http://tools.ietf.org/html/rfc2445#section-4.8.5.3 (VALUE=DATE or VALUE=DATE-TIME)
 *
 * @prop periods         fixed list of periods in which the event recurs
 *                       RDATE http://tools.ietf.org/html/rfc2445#section-4.8.5.3 (VALUE=PERIOD)
 *
 * @prop exceptions      fixed list of dates/date+times when the event does not recur
 *                       EXDATE http://tools.ietf.org/html/rfc2445#section-4.8.5.1 (no PERIOD allowed)
 *
 * @node rule            main recurrence rule (most UIs only allow one) (cq:CalendarRecurrenceRule)
 *                       RRULE http://tools.ietf.org/html/rfc2445#section-4.8.5.4
 *
 * @node *               further recurrence rules (cq:CalendarRecurrenceRule)
 *                       RRULE http://tools.ietf.org/html/rfc2445#section-4.8.5.4
 */
[cq:CalendarRecurrence] > nt:unstructured
  - dates (date) multiple
  - periods (date) multiple
  - exceptions (date) multiple
  + rule (nt:unstructured) = cq:CalendarRecurrenceRule copy
  + * (nt:unstructured) = cq:CalendarRecurrenceRule copy


/**
 * Defines a rule for recurrences (for events)
 *
 * RRULE http://tools.ietf.org/html/rfc2445#section-4.8.5.4
 * RECUR http://tools.ietf.org/html/rfc2445#section-4.3.10
 *
 * @prop frequency       mandatory, defines the type of rule (FREQ)
 *
 * @prop until           date at which the rule ends (UNTIL)
 * @prop count           number of occurences (incl. original event) (UNTIL)
 * @prop interval        at which interval the event recurs (INTERVAL)
 *
 * @prop weekStart       what day of the week is considered the start of the week (WKST)
 *
 * @prop byWeekDay       week days on which to repeat the event (BYDAY weekday part)
 * @prop byWeekDayOffset offsets for 'byWeekDay' entries on which to repeat the event (BYDAY offset part)
 * @prop byMonthDay      days of month (1 to 31, or -1 to -31 for backwards offset) on which to repeat the event (BYMONTHDAY)
 * @prop byYearDay       days of a year (1 to 366 or -1 to -366 for backwards offset) on which to repeat the event (BYYEARDAY)
 * @prop byWeekNr        weeks (1 to 53 or -1 to -53) on which to repeat the event (BYWEEKNO)
 * @prop byMonth         months (1 to 12) on which to repeat the event (BYMONTH)
 * @prop byHour          hours (0 to 23) on which to repeat the event (BYHOUR)
 * @prop byMinute        minutes (0 to 59) on which to repeat the event (BYMINUTE)
 * @prop bySecond        seconds (0 to 59) on which to repeat the event (BYSECOND)
 * @prop bySetPos        nth occurrence within the set of events of this rule on which to repeat the event (BYSETPOS)
 *
 */
[cq:CalendarRecurrenceRule] > nt:unstructured
  - frequency (string) < 'yearly', 'monthly', 'weekly', 'daily', 'hourly', 'minutely', 'secondly'
  - until (date)
  - count (long)
  - interval (long)
  - weekStart (string) < 'SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA'
  - byWeekDay (string) multiple < 'SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA'
  - byWeekDayOffset (long) multiple
  - byMonthDay (long) multiple
  - byYearDay (long) multiple
  - byWeekNr (long) multiple
  - byMonth (long) multiple
  - byHour (long) multiple
  - byMinute (long) multiple
  - bySecond (long) multiple
  - bySetPos (long) multiple


///**
// * iCalendar-based Todo/Task nodetype
// *
// * VTODO http://tools.ietf.org/html/rfc2445#section-4.6.2
// *
// * @prop due             date/time when this todo is expected to be completed
// *                       DUE http://tools.ietf.org/html/rfc2445#section-4.8.2.3
// *
// * @prop dueIsDate       whether the 'due' property denotes a pure date or a date + time
// *                       (since JCR always stores a full ISO8601 string as the date property
// *                       representation, incl. the time, the distinction between a pure date
// *                       and 0:00h at that date cannot be made with JCR's date property)
// *                       if this property is not set, date + time is assumed
// *                       DUE http://tools.ietf.org/html/rfc2445#section-4.8.2.3
// *
// * @prop dueTimeZone     time zone (name) for the 'due' date/time property
// *                       TZID http://tools.ietf.org/html/rfc2445#section-4.2.19
// *                       DUE http://tools.ietf.org/html/rfc2445#section-4.8.2.3
// *
// * @prop completed       date/time the todo was actually completed (always UTC)
// *                       COMPLETED http://tools.ietf.org/html/rfc2445#section-4.8.2.1
// *
// * @prop completeness    floating value between 0 and 1 that indicates how much of the task is already done
// *                       PERCENT-COMPLETE http://tools.ietf.org/html/rfc2445#section-4.8.1.8
// *
// */
//[cq:CalendarTodo] > cq:CalendarComponent
//  - due (date)
//  - dueIsDate (boolean)
//  - dueTimeZone (string)
//  - completed (date)
//  - completeness (double)
//
//
///**
// * Generic Alarm trigger nodetype
// *
// * VALARM component http://tools.ietf.org/html/rfc2445#section-4.6.6
// *
// * @prop action          what to do when the alarm occurs.
// *                       icalendar defines AUDIO, DISPLAY, EMAIL, PROCEDURE, but any string is allowed.
// *                       ACTION http://tools.ietf.org/html/rfc2445#section-4.8.6.1
// *
// * @prop trigger         relative time to the start of the parent event (in milliseconds,
// *                       negative = before, always relative to UTC)
// *                       TRIGGER http://tools.ietf.org/html/rfc2445#section-4.8.6.3
// *
// * @prop triggerRelatedTo if the trigger value is related to the start or end date of the parent event (START, END)
// *                        RELATED http://tools.ietf.org/html/rfc2445#section-4.2.14
// *
// * @prop repeat          number of times to repeat the alarm after the initial trigger
// *                       REPEAT http://tools.ietf.org/html/rfc2445#section-4.8.6.2
// *
// * @prop repeatDelay     specifies the delay between repeats of the alarm (in milliseconds)
// *                       DURATION http://tools.ietf.org/html/rfc2445#section-4.8.2.5
// *
// * @prop mailTo          list of email addresses or users to send the mail in the action=EMAIL case
// *                       ATTENDEE http://tools.ietf.org/html/rfc2445#section-4.8.4.1
// *
// * @prop attachments     TODO: links/URLs to attached documents, for action=AUDIO (sound file to be played)
// *                       ATTACH http://tools.ietf.org/html/rfc2445#section-4.8.1.1
// *
// * Inherited props:
// *
// * @prop jcr:title       used for action=EMAIL as subject of the mail
// *                       SUMMARY http://tools.ietf.org/html/rfc2445#section-4.8.1.12
// *
// * @prop jcr:description used for action=DISPLAY as message to display and
// *                       for action=EMAIL as body of the mail
// *                       DESCRIPTION http://tools.ietf.org/html/rfc2445#section-4.8.1.5
// *
// * Subnodes:
// *
// * @node attachments     TODO: containing inline attachments (nt:file)
// *                       ATTACH http://tools.ietf.org/html/rfc2445#section-4.8.1.1
// *
// */
// // TODO: make alarm standalone (own start time, no related stuff to parent icalendar event)
//[cq:Alarm] > mix:title, nt:unstructured
// - action (string)
// - trigger (long)
// - triggerRelatedTo (string)
// - repeat (long)
// - repeatDelay (long)
// - mailTo (string) multiple
// - attachments (string) multiple
// + attachments (nt:folder) = nt:folder copy
//
///**
// * An attendee for a calendar event.
// *
// * ATTENDEE http://tools.ietf.org/html/rfc2445#section-4.8.4.1
// *
// * @prop user            user id (local or global)
// *                       TODO: user id
// *
// * @prop jcr:title       common user name (eg. "Peter Murks", only if external)
// *                       CN http://tools.ietf.org/html/rfc2445#section-4.2.2
// *
// * @prop role            role of attendence: CHAIR, REQ-PARTICIPANT, OPT-PARTICIPANT, NON-PARTICIPANT, ...
// *                       ROLE http://tools.ietf.org/html/rfc2445#section-4.2.16
// *
// * @prop status          participation status, eg. NEEDS-ACTION (default), ACCEPTED, DECLINED, TENTATIVE, DELEGATED;
// *                       for VTODO also: COMPLETED, IN-PROCESS
// *                       PARTSTAT http://tools.ietf.org/html/rfc2445#section-4.2.12
// *
// * @prop rsvp            whether the attendee is asked to respond if he will attend (default false)
// *                       RSVP http://tools.ietf.org/html/rfc2445#section-4.2.17
// *
// * @prop type            calendar user type, eg. INDIVIDUAL (default), GROUP, RESOURCE, ROOM, UNKNOWN, ...
// *                       CUTYPE http://tools.ietf.org/html/rfc2445#section-4.2.3
// *
// * @prop delegatedTo     user id of user to which this attendee delegated to
// *                       DELEGATED-TO http://tools.ietf.org/html/rfc2445#section-4.2.5
// *
// * @prop delegatedFrom   user id of user that has delegated to this attendee
// *                       DELEGATED-FROM http://tools.ietf.org/html/rfc2445#section-4.2.4
// *
// * Not important:
// *
// * @prop dir             ldap directory entry of this user
// * @prop member          group or mailing list this user belongs to
// * @prop sentBy          user that is acting on behalf of the attendee/organizer
// */
//[cq:CalendarAttendee] > mix:title, nt:unstructured
// - user (string)
// - role (string)
// - status (string)
// - rsvp (boolean)
// - type (string)
// - delegatedTo (string)
// - delegatedFrom (string)
//
//
///**
// * Overview of iCalendar property PARAMETERS:
// *
// * ALTREP         => ignore? (for COMMENT, DESCRIPTION, LOCATION, RESOURCES, SUMMARY, CONTACT)
// * CN             => X common name, part of details of attendee (for ATTENDEE, ORGANIZER)
// * CUTYPE         => X calendar user type (for ATTENDEE): INDIVIDUAL, GROUP, RESOURCE, ROOM, UNKNOWN...
// * DELEGATED-FROM => X specifies the user that has delegated to this one, part of attendee details (for ATTENDEE)
// * DELEGATED-TO   => X specifies the user to which this one has delegated to, part of attendee details (for ATTENDEE)
// * DIR            => references an ldap directory entry for the user (for ATTENDEE, ORGANIZER)
// * ENCODING       => (for ATTACH ?)
// * FMTTYPE        => X mime type of attachment -> jcr:mimeType (for ATTACH)
// * FBTYPE         => free/busy time (for FREEBUSY in VFREEBUSY object)
// * LANGUAGE       => language in RFC-1766 format (for CATEGORIES, COMMENT, DESCRIPTION, LOCATION, RESOURCES,
// *                   SUMMARY, TZNAME, ATTENDEE, CONTACT, ORGANIZER, X-property)
// * MEMBER         => to which group or mailing list the attendee belongs to (for ATTENDEE)
// * PARTSTAT       => X participation status of attendee (for ATTENDEE): NEEDS-ACTION, ACCEPTED, DECLINED, TENTATIVE,
// *                   DELEGATED, ... for VTODO also: COMPLETED, IN-PROCESS
// * RANGE          => (for RECURRENCE-ID)
// * RELATED        => whether the trigger is related to the start or end date of the even (for TRIGGER): START, END
// * RELTYPE        => to what this component is related to (for RELATED-TO): PARENT, CHILD, SIBLING, ...
// * ROLE           => X role of attendence (for ATTENDEE): CHAIR, REQ-PARTICIPANT, OPT-PARTICIPANT, NON-PARTICIPANT
// * RSVP           => X whether there is an expectation to answer if someone is coming (for ATTENDEE) (default FALSE)
// * SENT-BY        => user that is acting on behalf of the attendee/organizer (for ATTENDEE, ORGANIZER)
// * TZID           => X time zone identifier (for DTSTART, DTEND, DUE, RECURRENCE-ID, EXDATE, RDATE)
// */
//
