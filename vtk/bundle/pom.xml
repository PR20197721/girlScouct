<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd ">
	<modelVersion>4.0.0</modelVersion>
	<!-- ====================================================================== -->
	<!-- P A R E N T P R O J E C T D E S C R I P T I O N -->
	<!-- ====================================================================== -->
	<parent>
		<groupId>org.girlscouts.aem</groupId>
		<artifactId>vtk</artifactId>
		<version>4.0.45</version>
	</parent>
	<!-- ====================================================================== -->
	<!-- P R O J E C T D E S C R I P T I O N -->
	<!-- ====================================================================== -->
	<groupId>org.girlscouts.aem.vtk</groupId>
	<artifactId>girlscouts-vtk-bundle</artifactId>
	<packaging>bundle</packaging>
	<name>Girl Scouts VTK Bundle</name>
	<properties>
		<slf4jVersion>1.7.12</slf4jVersion>
		<junitVersion>4.12</junitVersion>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>
	<dependencies>
		<dependency>
			<groupId>com.adobe.aem</groupId>
			<artifactId>uber-jar</artifactId>
            <version>6.5.2</version>
			<classifier>apis</classifier>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.girlscouts.aem.vtk</groupId>
			<artifactId>modified-checker</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.girlscouts.aem.common</groupId>
			<artifactId>girlscouts-common-bundle</artifactId>
            <version>${project.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.girlscouts.aem.vtk</groupId>
			<artifactId>ical4j-wrapper</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.day.commons.osgi.wrapper</groupId>
			<artifactId>com.day.commons.osgi.wrapper.commons-email</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.adobe.granite.bundles</groupId>
			<artifactId>json</artifactId>
			<scope>provided</scope>
		</dependency>
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>javax.mail</artifactId>
            <scope>provided</scope>
        </dependency>
		<dependency>
			<groupId>com.day.commons.osgi.wrapper</groupId>
			<artifactId>com.day.commons.osgi.wrapper.commons-httpclient</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.googlecode.java-diff-utils</groupId>
			<artifactId>diffutils</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.jackrabbit</groupId>
			<artifactId>jackrabbit-ocm</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.scr.annotations</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.compendium</artifactId>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.core</artifactId>
		</dependency>
		<dependency>
	    	<groupId>org.osgi</groupId>
	    	<artifactId>osgi.cmpn</artifactId>
		</dependency> 
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.jcr</groupId>
			<artifactId>jcr</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>biz.aQute</groupId>
			<artifactId>bndlib</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.joda</groupId>
			<artifactId>joda-convert</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>2.2.9</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-analyzers</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-analyzers-common</artifactId>
			<version>4.0.0-ALPHA</version>
		</dependency>
		<dependency>
			<groupId>com.itextpdf.tool</groupId>
			<artifactId>xmlworker</artifactId>
			<version>5.4.1</version>
		</dependency>
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.7.3</version>
		</dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.8.7</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.5</version>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.jexcelapi</groupId>
            <artifactId>jxl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>1.9.13</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>19.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.models.api</artifactId>
            <version>1.3.8</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.query</artifactId>
        </dependency>
    </dependencies>
	<!-- ====================================================================== -->
	<!-- B U I L D D E F I N I T I O N -->
	<!-- ====================================================================== -->
	<build>
		<plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${org.mapstruct.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-scr-plugin</artifactId>
				<version>1.20.0</version>
				<executions>
					<execution>
						<id>generate-scr-descriptor</id>
						<goals>
							<goal>scr</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Bundle-SymbolicName>org.girlscouts.aem.vtk.bundle</Bundle-SymbolicName>
						<Embed-Dependency>*;scope=compile|runtime</Embed-Dependency>
						<Import-Package>
							<!-- org.apache.avalon.framework.logger;resolution:=optional, -->
							<!-- org.apache.log;resolution:=optional, javax.portlet;resolution:=optional, -->
							<!-- Mike Z.: It is safe not to import these packages. Ref: -->
							<!-- http://svn.apache.org/repos/asf/sling/tags/org.apache.sling.jcr.ocm-2.0.4-incubator/pom.xml -->
							!org.apache.tools.ant,
							!org.apache.tools.ant.types,
							!org.objectweb.asm.attrs,
							!org.objectweb.asm.util,
							!org.codehaus.aspectwerkz.hook,
							<!-- END -->
                            com.day.cq.commons,
                            com.day.cq.commons.jcr,
                            com.day.cq.dam.api,
                            com.day.cq.dam.commons.util,
                            com.day.cq.mailer,
                            com.day.cq.replication,
                            com.day.cq.search,
                            com.day.cq.search.eval,
                            com.day.cq.search.facets,
                            com.day.cq.search.result,
                            com.day.cq.security,
                            com.day.cq.statistics,
                            com.day.cq.tagging,
                            com.day.cq.wcm.api,
                            com.day.cq.wcm.api.components,
                            com.day.cq.wcm.core.stats,
                            com.day.cq.wcm.foundation,
                            com.day.cq.wcm.foundation.forms,
                            com.day.cq.wcm.msm.api,
                            com.day.cq.wcm.workflow.process,
                            com.day.cq.workflow,
                            com.day.cq.workflow.exec,
                            com.day.cq.workflow.metadata,
                            com.day.cq.workflow.model,
                            com.day.crx.statistics,
                            com.day.image,
                            com.day.text,
                            com.day.text.csv,
                            com.google.common.cache,
                            com.google.common.collect,
                            com.google.common.reflect,
                            javax.activation,
                            javax.annotation,
                            javax.crypto,
                            javax.crypto.spec,
                            javax.imageio,
                            javax.inject,
                            javax.jcr,
                            javax.jcr.lock,
                            javax.jcr.nodetype,
                            javax.jcr.query,
                            javax.jcr.security,
                            javax.jcr.version,
                            javax.mail.internet,
                            javax.mail.util,
                            javax.naming,
                            javax.naming.directory,
                            javax.naming.ldap,
                            javax.net,
                            javax.net.ssl,
                            javax.security.auth.x500,
                            javax.servlet,
                            javax.servlet.http,
                            javax.xml.bind,
                            javax.xml.crypto.dsig,
                            javax.xml.crypto.dsig.dom,
                            javax.xml.namespace,
                            javax.xml.parsers,
                            javax.xml.stream,
                            javax.xml.transform,
                            javax.xml.xpath,
                            jxl.*,
                            net.fortuna.ical4j.data,
                            net.fortuna.ical4j.model,
                            net.fortuna.ical4j.model.component,
                            net.fortuna.ical4j.model.property,
                            net.fortuna.ical4j.util,
                            org.apache.commons.beanutils,
                            org.apache.commons.httpclient,
                            org.apache.commons.httpclient.methods,
                            org.apache.commons.httpclient.params,
                            org.apache.commons.httpclient.util,
                            org.apache.commons.io,
                            org.apache.commons.io.output,
                            org.apache.commons.mail,
                            org.apache.jackrabbit.api,
                            org.apache.jackrabbit.api.security,
                            org.apache.jackrabbit.api.security.user,
                            org.apache.jackrabbit.commons,
                            org.apache.jackrabbit.util,
                            org.apache.log4j,
                            org.apache.sling.api,
                            org.apache.sling.api.adapter,
                            org.apache.sling.api.request,
                            org.apache.sling.api.resource,
                            org.apache.sling.api.servlets,
                            org.apache.sling.auth.core,
                            org.apache.sling.commons.json,
                            org.apache.sling.commons.json.io,
                            org.apache.sling.jcr.api,
                            org.apache.sling.settings,
                            org.apache.sling.models.annotations,
                            org.apache.sling.models.annotations.injectorspecific,
                            org.ietf.jgss,
                            org.joda.time,
                            org.joda.time.format,
                            org.json,
                            org.mozilla.javascript,
                            org.osgi.framework,
                            org.osgi.service.component,
                            org.osgi.service.event,
                            org.slf4j,
                            org.w3c.dom,
                            org.xml.sax,
                            org.girlscouts.common.*;version="3.0.0",
                            org.girlscouts.vtk.modifiedcheck
						</Import-Package>
                        <Sling-Model-Packages>org.girlscouts.vtk.sling.model</Sling-Model-Packages>
						<Export-Package>org.girlscouts.vtk.*</Export-Package>
						<!-- Recursively embed dependency jars -->
						<Embed-Transitive>true</Embed-Transitive>
					</instructions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.sling</groupId>
				<artifactId>maven-sling-plugin</artifactId>
				<configuration>
					<slingUrl>http://${crx.host}:${crx.port}/apps/myproject/install</slingUrl>
					<usePut>true</usePut>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<excludePackageNames>
						*.impl
					</excludePackageNames>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<compilerArguments>
						<encoding>${project.build.sourceEncoding}</encoding>
					</compilerArguments>
				</configuration>
			</plugin>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>2.2.2</version>
				<executions>
					<execution>
						<id>get-the-git-infos</id>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
					<execution>
						<id>validate-the-git-infos</id>
						<goals>
							<goal>validateRevision</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<!-- If you'd like to tell the plugin where your .git directory is, 
						use this setting, otherwise we'll perform a search trying to figure out the 
						right directory. It's better to add it explicitly IMHO. -->
					<dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
					<generateGitPropertiesFile>true</generateGitPropertiesFile>

					<!-- The path for the to be generated properties file, it's relative 
						to ${project.basedir} The default value is ${project.build.outputDirectory}/git.properties 
						*Note*: If you plan to set the generateGitPropertiesFilename-Path to a location 
						where usally the source-files comes from (e.g. src/main/resources) and experience 
						that your IDE (e.g. eclipse) invokes "Maven Project Builder" once every second, 
						the chances that you are using an IDE where the src-folder is a watched folder 
						for files that are *only* edited by humans is pretty high. For further information 
						refer to the manual for your specifc IDE and check the worflow of "incremental 
						project builders". In order to fix this problem we recommend to set the generateGitPropertiesFilename-Path 
						to a target folder (e.g. ${project.build.outputDirectory}) since this is 
						the place where all derived/generated resources should go. -->
					<generateGitPropertiesFilename>src/main/resources/girlscoutsbuild.properties</generateGitPropertiesFilename>

					<!-- Can be used to exclude certain properties from being emitted into 
						the resulting file. May be useful when you want to hide {@code git.remote.origin.url} 
						(maybe because it contains your repo password?), or the email of the committer 
						etc. Each value may be globbing, that is, you can write {@code git.commit.user.*} 
						to exclude both, the {@code name}, as well as {@code email} properties from 
						being emitted into the resulting files. Please note that the strings here 
						are Java regexes ({@code .*} is globbing, not plain {@code *}). -->
					<excludeProperties>
						<!-- <excludeProperty>git.user.*</excludeProperty> -->
					</excludeProperties>


					<!-- @since v2.0.4 -->
					<!-- Controls the length of the abbreviated git commit it (git.commit.id.abbrev) 
						Defaults to `7`. `0` carries the special meaning. Maximum value is `40`, 
						because of max SHA-1 length. -->
					<abbrevLength>7</abbrevLength>


					<!-- @since v2.2.0 -->
					<!-- The option can be used to tell the plugin how it should generate 
						the 'git.commit.id' property. Due to some naming issues when exporting the 
						properties as an json-object (https://github.com/ktoso/maven-git-commit-id-plugin/issues/122) 
						we needed to make it possible to export all properties as a valid json-object. 
						Due to the fact that this is one of the major properties the plugin is exporting 
						we just don't want to change the exporting mechanism and somehow throw the 
						backwards compatibility away. We rather provide a convenient switch where 
						you can choose if you would like the properties as they always had been, 
						or if you rather need to support full json-object compatibility. In the case 
						you need to fully support json-object we unfortunately need to change the 
						'git.commit.id' property from 'git.commit.id' to 'git.commit.id.full' in 
						the exporting mechanism to allow the generation of a fully valid json object. 
						Currently the switch allows two different options: 1. By default this property 
						is set to 'flat' and will generate the formerly known property 'git.commit.id' 
						as it was in the previous versions of the plugin. Keeping it to 'flat' by 
						default preserve backwards compatibility and does not require further adjustments 
						by the end user. 2. If you set this switch to 'full' the plugin will export 
						the formerly known property 'git.commit.id' as 'git.commit.id.full' and therefore 
						will generate a fully valid json object in the exporting mechanism. *Note*: 
						Depending on your plugin configuration you obviously can choose the 'prefix' 
						of your properties by setting it accordingly in the plugin's configuration. 
						As a result this is therefore only an illustration what the switch means 
						when the 'prefix' is set to it's default value. *Note*: If you set the value 
						to something that's not equal to 'flat' or 'full' (ignoring the case) the 
						plugin will output a warning and will fallback to the default 'flat' mode. -->
					<commitIdGenerationMode>flat</commitIdGenerationMode>

					<!-- @since 2.1.0 -->
					<!-- read up about git-describe on the in man, or it's homepage - it's 
						a really powerful versioning helper and the recommended way to use git-commit-id-plugin. 
						The configuration bellow is optional, by default describe will run "just 
						like git-describe on the command line", even though it's a JGit reimplementation. -->
					<gitDescribe>

						<!-- don't generate the describe property -->
						<skip>true</skip>

						<!-- if no tag was found "near" this commit, just print the commit's 
							id instead, helpful when you always expect this field to be not-empty -->
						<always>false</always>
						<!-- how many chars should be displayed as the commit object id? 7 
							is git's default, 0 has a special meaning (see end of this README.md), and 
							40 is the maximum value here -->
						<abbrev>7</abbrev>

						<!-- when the build is triggered while the repo is in "dirty state", 
							append this suffix -->
						<dirty>-dirty</dirty>

						<!-- Only consider tags matching the given pattern. This can be used 
							to avoid leaking private tags from the repository. -->
						<match>*</match>

						<!-- when you run git-describe it only looks only for *annotated tags* 
							by default if you wish to consider *lightweight tags* in your describe as 
							well you would need to switch this to *true* The difference between *annotated 
							tags* and *lightweight tags* is outlined in more depth here: https://github.com/ktoso/maven-git-commit-id-plugin/#git-describe-and-a-small-gotcha-with-tags -->
						<tags>false</tags>



						<!-- always print using the "tag-commits_from_tag-g_commit_id-maybe_dirty"
							format, even if "on" a tag. The distance will always be 0 if you're "on"
							the tag. -->
						<forceLongFormat>false</forceLongFormat>
					</gitDescribe>
					<!-- @since 2.2.2 -->
					<!-- true by default, controls whether the validation will fail if *at 
						least one* of the validationProperties does not match with it's expected 
						values. If you don't care about this, you may want to set this value to false 
						(this makes the configuration of validationProperties useless). *Note*: This 
						configuration will only be taken into account when the additional goal `validateRevision` 
						is configured inside an execution and at least one validationProperty is 
						defined. -->
					<validationShouldFailIfNoMatch>true</validationShouldFailIfNoMatch>
				</configuration>
			</plugin>
			<!-- END OF GIT COMMIT ID PLUGIN CONFIGURATION -->
		</plugins>
	</build>
</project>
