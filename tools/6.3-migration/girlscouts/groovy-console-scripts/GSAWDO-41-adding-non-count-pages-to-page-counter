import javax.jcr.Node
import org.apache.jackrabbit.commons.JcrUtils
import javax.jcr.query.*
String QUERY_LANGUAGE = "JCR-SQL2";
String PATH = "/content";
String RESOURCE_TYPE = 'girlscouts/components/pagecounter';
String EXPRESSION = "SELECT s.[jcr:path] "+
                    "FROM [nt:unstructured] AS s "+
                    "WHERE ISDESCENDANTNODE('"+PATH+"') AND "+
                    "s.[sling:resourceType]='"+RESOURCE_TYPE+"'";
QueryResult result = search(EXPRESSION, QUERY_LANGUAGE)
if (result != null) {
    try {
        RowIterator rowIter = result.getRows()
        while (rowIter.hasNext()) {
            Row row = rowIter.nextRow()
            Node node = row.getNode()
            if(node.hasProperty("paths") ){
                if(node.hasNode("filters")){
                    Node filterNode = node.getNode("filters");
                    println("**************************************************************************************")
                    println(filterNode.getPath());
                    NodeIterator itr = filterNode.getNodes()
                    while(itr.hasNext()){
                        Node itemNode = itr.nextNode()
                        String label = itemNode.hasProperty("label") ? itemNode.getProperty("label").getString() : null;
                        String subDirValue = itemNode.hasProperty("subDirOnly") ? itemNode.getProperty("subDirOnly").getString() : null;
                        if (label=="Redirects") {
                            itemNode.setProperty("subDirOnly", "true")
                        }
                    }
                    save()
                    println("saved converted content")
                }
            }
        }
    } catch (Exception e) {
        println(e.getMessage())
        e.printStackTrace()
    }
}
def QueryResult search(EXPRESSION, QUERY_LANGUAGE) {
    println(EXPRESSION)
    QueryResult result = null;
    try {
        QueryManager queryManager = session.getWorkspace().getQueryManager();
        Query sql2Query = queryManager.createQuery(EXPRESSION, QUERY_LANGUAGE);
        return sql2Query.execute();
    } catch (Exception e) {
        e.printStackTrace();
    }
    return result;
}